"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫ –∏ –ø–ª–∞—Ç–µ–∂–µ–π
"""

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from ..states import SubscriptionStates
from ..keyboards import get_main_keyboard, get_subscription_keyboard
from database import Database
from config import config

router = Router()


@router.message(Command("subscribe"))
@router.message(F.text == "üíé –ü–æ–¥–ø–∏—Å–∫–∞")
async def show_subscription_options(message: Message, state: FSMContext, db: Database):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏"""
    await state.clear()
    
    user_id = message.from_user.id
    user_data = await db.get_user(user_id)
    
    is_premium = user_data.get('is_premium', 0)
    
    subscription_text = f"""
üíé <b>–ü–û–î–ü–ò–°–ö–ê</b>

<b>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</b> {'‚úÖ Premium –∞–∫—Ç–∏–≤–Ω–∞' if is_premium else '‚ùå –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ'}

<b>üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ:</b>
‚Ä¢ {config.FREE_ANALYSES_PER_DAY} –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ –¥–µ–Ω—å
‚Ä¢ –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑

<b>üíé Premium —Ç–∞—Ä–∏—Ñ:</b>
‚Ä¢ {config.PREMIUM_ANALYSES_PER_DAY} –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ –¥–µ–Ω—å
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚Ä¢ –†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º

<b>–¶–µ–Ω—ã:</b>
üíé Premium (30 –¥–Ω–µ–π) - 500‚ÇΩ
üí∞ –î–æ–∫—É–ø–∏—Ç—å –∞–Ω–∞–ª–∏–∑—ã (10 —à—Ç) - 100‚ÇΩ

–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ:
"""
    
    await message.answer(
        subscription_text,
        reply_markup=get_subscription_keyboard(),
        parse_mode="HTML"
    )


@router.callback_query(F.data == "subscribe_premium_30")
async def process_premium_subscription(callback: CallbackQuery, db: Database):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ Premium –Ω–∞ 30 –¥–Ω–µ–π"""
    await callback.answer()
    
    # –í MVP —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    payment_text = """
üíé <b>Premium –ø–æ–¥–ø–∏—Å–∫–∞ (30 –¥–Ω–µ–π)</b>

<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> 500‚ÇΩ

<b>–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç:</b>
‚úÖ {premium_analyses} –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ –¥–µ–Ω—å
‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

<b>–î–ª—è –æ–ø–ª–∞—Ç—ã:</b>
–í MVP –æ–ø–ª–∞—Ç–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.
–≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.

<b>–í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±—É–¥–µ—Ç:</b>
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π

–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Premium –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
—Å–≤—è–∂–∏—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
""".format(premium_analyses=config.PREMIUM_ANALYSES_PER_DAY)
    
    await callback.message.edit_text(
        payment_text,
        parse_mode="HTML"
    )
    
    # –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç:
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –≤ –ë–î
    # 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É
    # 3. –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –æ–ø–ª–∞—Ç–µ
    # 4. –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    # 5. –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏


@router.callback_query(F.data == "buy_analyses_10")
async def process_buy_analyses(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–ø–∫–∏ –∞–Ω–∞–ª–∏–∑–æ–≤"""
    await callback.answer()
    
    payment_text = """
üí∞ <b>–î–æ–∫—É–ø–∏—Ç—å –∞–Ω–∞–ª–∏–∑—ã (10 —à—Ç)</b>

<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> 100‚ÇΩ

<b>–ß—Ç–æ –ø–æ–ª—É—á–∏—à—å:</b>
‚úÖ 10 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤
‚úÖ –ù–µ —Å–≥–æ—Ä–∞—é—Ç –≤ –∫–æ–Ω—Ü–µ –¥–Ω—è
‚úÖ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–≥–¥–∞ —É–≥–æ–¥–Ω–æ

<b>–î–ª—è –æ–ø–ª–∞—Ç—ã:</b>
–í MVP –æ–ø–ª–∞—Ç–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.
–≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.

<b>–í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±—É–¥–µ—Ç:</b>
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–æ–≤
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫
"""
    
    await callback.message.edit_text(
        payment_text,
        parse_mode="HTML"
    )


@router.callback_query(F.data == "cancel_subscription")
async def cancel_subscription(callback: CallbackQuery):
    """–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä –ø–æ–¥–ø–∏—Å–∫–∏"""
    await callback.answer("–û—Ç–º–µ–Ω–µ–Ω–æ")
    await callback.message.edit_text(
        "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
    )


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–º–∏—É–º–∞ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
@router.message(Command("activate_premium_test"))
async def activate_premium_test(message: Message, db: Database):
    """–¢–µ—Å—Ç–æ–≤–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–º–∏—É–º–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)"""
    user_id = message.from_user.id
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–µ–º–∏—É–º –Ω–∞ 30 –¥–Ω–µ–π
    await db.grant_premium(user_id, days=30)
    
    await message.answer(
        "‚úÖ Premium –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ 30 –¥–Ω–µ–π!\n\n"
        "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.\n"
        f"–¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–æ {config.PREMIUM_ANALYSES_PER_DAY} –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ –¥–µ–Ω—å.",
        reply_markup=get_main_keyboard()
    )


@router.message(Command("deactivate_premium_test"))
async def deactivate_premium_test(message: Message, db: Database):
    """–¢–µ—Å—Ç–æ–≤–∞—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–º–∏—É–º–∞"""
    user_id = message.from_user.id
    
    await db.revoke_premium(user_id)
    
    await message.answer(
        "‚ùå Premium –ø–æ–¥–ø–∏—Å–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.\n\n"
        f"–í–µ—Ä–Ω—É–ª–∏—Å—å {config.FREE_ANALYSES_PER_DAY} –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ –¥–µ–Ω—å.",
        reply_markup=get_main_keyboard()
    )

